# utils.py



# utils/leaderboard_utils.py
import asyncio
import logging
from supabase import Client

async def build_leaderboard_message(top_results: list[dict], supabase_client: Client) -> str:
    """
    –§–æ—Ä–º–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç "üî• –¢–æ–ø-10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n" —Å –º–µ–¥–∞–ª—è–º–∏ –¥–ª—è –ø–µ—Ä–≤—ã—Ö 3 –º–µ—Å—Ç.
    –ü–∞—Ä–∞–º–µ—Ç—Ä—ã:
      top_results: —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤–∞—Ä–µ–π –≤–∏–¥–∞ {"user_id": <int>, "score": <int>, "time_taken": <int>}
      supabase_client: –∫–ª–∏–µ–Ω—Ç Supabase (create_client(...))
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç:
      –°—Ç—Ä–æ–∫—É —Å –∏—Ç–æ–≥–æ–≤—ã–º —Ä–µ–π—Ç–∏–Ω–≥–æ–º, –≤–∫–ª—é—á–∞—é—â–∏–º –º–µ—Å—Ç–∞, –∏–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –º–µ–¥–∞–ª–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å).
    """
    if not top_results:
        return "–ü–æ–∫–∞ –Ω–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."

    max_width = 50
    leaderboard_text = "üî• –¢–æ–ø-10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ üî•".center(max_width) + "\n"

    for idx, res in enumerate(top_results, start=1):
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ–¥–∞–ª—å –¥–ª—è –ø–µ—Ä–≤—ã—Ö —Ç—Ä–µ—Ö –º–µ—Å—Ç
        medals = {1: "ü•á", 2: "ü•à", 3: "ü•â"}
        medal = medals.get(idx, "")

        # –§–æ—Ä–º–∏—Ä—É–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é –∏ –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–µ–º (—á—Ç–æ–±—ã –±—ã–ª–æ —Ä–æ–≤–Ω–æ)
        place_text = f"{idx}.".ljust(3)

        user_id = res["user_id"]
        score = res["score"]
        time_taken = res["time_taken"]

        # –ü–æ–¥–≥—Ä—É–∂–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ Supabase
        try:
            user_info = await asyncio.to_thread(
                supabase_client.table("users")
                .select("username, first_name")
                .eq("id", user_id)
                .single()
                .execute
            )
            user_data = user_info.data
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–º–µ–Ω–∏ –¥–ª—è user_id={user_id}: {e}")
            user_data = None

        # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∏ username, –Ω–∏ first_name, –ø–æ–¥—Å—Ç–∞–≤–∏–º "–ê–Ω–æ–Ω–∏–º"
        username = (user_data.get("first_name") or user_data.get("username")) if user_data else "–ê–Ω–æ–Ω–∏–º"

        # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Ä–µ–π—Ç–∏–Ω–≥–∞ —Å –≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ–º
        leaderboard_text += f"{place_text} {username} ‚Äì {score} –æ—á–∫–æ–≤ ({time_taken} —Å–µ–∫) {medal}\n"

    return leaderboard_text